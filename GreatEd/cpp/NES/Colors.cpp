/*
	A NES Super Mario Bros Level Editor [public version]
	Copyright (C) 2025 ALXR aka loginsin
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "h\NES\NES.h"

const COLORREF g_crNesColor[] =
{
		XCHGCOLORREF( 0x00747474 ),
		XCHGCOLORREF( 0x008C1824 ),
		XCHGCOLORREF( 0x00A80000 ),
		XCHGCOLORREF( 0x009C0044 ),
		XCHGCOLORREF( 0x0074008C ),
		XCHGCOLORREF( 0x001000A8 ),
		XCHGCOLORREF( 0x000000A4 ),
		XCHGCOLORREF( 0x0000087C ),
		XCHGCOLORREF( 0x00002C40 ),
		XCHGCOLORREF( 0x00004400 ),
		XCHGCOLORREF( 0x00005000 ),
		XCHGCOLORREF( 0x00143C00 ),
		XCHGCOLORREF( 0x005C3C18 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00BCBCBC ),
		XCHGCOLORREF( 0x00EC7000 ),
		XCHGCOLORREF( 0x00EC3820 ),
		XCHGCOLORREF( 0x00F00080 ),
		XCHGCOLORREF( 0x00BC00BC ),
		XCHGCOLORREF( 0x005800E4 ),
		XCHGCOLORREF( 0x000028D8 ),
		XCHGCOLORREF( 0x000C4CC8 ),
		XCHGCOLORREF( 0x00007088 ),
		XCHGCOLORREF( 0x00009400 ),
		XCHGCOLORREF( 0x0000A800 ),
		XCHGCOLORREF( 0x00389000 ),
		XCHGCOLORREF( 0x00888000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCBC3C ),
		XCHGCOLORREF( 0x00FC945C ),
		XCHGCOLORREF( 0x00FC88CC ), // XCHGCOLORREF( 0x00FC8840),
		XCHGCOLORREF( 0x00FC78F4 ),
		XCHGCOLORREF( 0x00B474FC ),
		XCHGCOLORREF( 0x006074FC ),
		XCHGCOLORREF( 0x003898FC ),
		XCHGCOLORREF( 0x003CBCF0 ),
		XCHGCOLORREF( 0x0010D080 ),
		XCHGCOLORREF( 0x0048DC4C ),
		XCHGCOLORREF( 0x0098F858 ),
		XCHGCOLORREF( 0x00D8E800 ),
		XCHGCOLORREF( 0x00787878 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCE4A8 ),
		XCHGCOLORREF( 0x00FCD4C4 ),
		XCHGCOLORREF( 0x00FCC8D4 ),
		XCHGCOLORREF( 0x00FCC4FC ),
		XCHGCOLORREF( 0x00D8C4FC ),
		XCHGCOLORREF( 0x00B0BCFC ),
		XCHGCOLORREF( 0x00A8D8FC ),
		XCHGCOLORREF( 0x00A0E4FC ),
		XCHGCOLORREF( 0x00A0FCE0 ),
		XCHGCOLORREF( 0x00BCF0A8 ),
		XCHGCOLORREF( 0x00CCFCB0 ),
		XCHGCOLORREF( 0x00F0FC9C ),
		XCHGCOLORREF( 0x00C4C4C4 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00747474 ),
		XCHGCOLORREF( 0x008C1824 ),
		XCHGCOLORREF( 0x00A80000 ),
		XCHGCOLORREF( 0x009C0044 ),
		XCHGCOLORREF( 0x0074008C ),
		XCHGCOLORREF( 0x001000A8 ),
		XCHGCOLORREF( 0x000000A4 ),
		XCHGCOLORREF( 0x0000087C ),
		XCHGCOLORREF( 0x00002C40 ),
		XCHGCOLORREF( 0x00004400 ),
		XCHGCOLORREF( 0x00005000 ),
		XCHGCOLORREF( 0x00143C00 ),
		XCHGCOLORREF( 0x005C3C18 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00BCBCBC ),
		XCHGCOLORREF( 0x00EC7000 ),
		XCHGCOLORREF( 0x00EC3820 ),
		XCHGCOLORREF( 0x00F00080 ),
		XCHGCOLORREF( 0x00BC00BC ),
		XCHGCOLORREF( 0x005800E4 ),
		XCHGCOLORREF( 0x000028D8 ),
		XCHGCOLORREF( 0x000C4CC8 ),
		XCHGCOLORREF( 0x00007088 ),
		XCHGCOLORREF( 0x00009400 ),
		XCHGCOLORREF( 0x0000A800 ),
		XCHGCOLORREF( 0x00389000 ),
		XCHGCOLORREF( 0x00888000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCBC3C ),
		XCHGCOLORREF( 0x00FC945C ),
		XCHGCOLORREF( 0x00FC8840 ),
		XCHGCOLORREF( 0x00FC78F4 ),
		XCHGCOLORREF( 0x00B474FC ),
		XCHGCOLORREF( 0x006074FC ),
		XCHGCOLORREF( 0x003898FC ),
		XCHGCOLORREF( 0x003CBCF0 ),
		XCHGCOLORREF( 0x0010D080 ),
		XCHGCOLORREF( 0x0048DC4C ),
		XCHGCOLORREF( 0x0098F858 ),
		XCHGCOLORREF( 0x00D8E800 ),
		XCHGCOLORREF( 0x00787878 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCE4A8 ),
		XCHGCOLORREF( 0x00FCD4C4 ),
		XCHGCOLORREF( 0x00FCC8D4 ),
		XCHGCOLORREF( 0x00FCC4FC ),
		XCHGCOLORREF( 0x00D8C4FC ),
		XCHGCOLORREF( 0x00B0BCFC ),
		XCHGCOLORREF( 0x00A8D8FC ),
		XCHGCOLORREF( 0x00A0E4FC ),
		XCHGCOLORREF( 0x00A0FCE0 ),
		XCHGCOLORREF( 0x00BCF0A8 ),
		XCHGCOLORREF( 0x00CCFCB0 ),
		XCHGCOLORREF( 0x00F0FC9C ),
		XCHGCOLORREF( 0x00C4C4C4 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00747474 ),
		XCHGCOLORREF( 0x008C1824 ),
		XCHGCOLORREF( 0x00A80000 ),
		XCHGCOLORREF( 0x009C0044 ),
		XCHGCOLORREF( 0x0074008C ),
		XCHGCOLORREF( 0x001000A8 ),
		XCHGCOLORREF( 0x000000A4 ),
		XCHGCOLORREF( 0x0000087C ),
		XCHGCOLORREF( 0x00002C40 ),
		XCHGCOLORREF( 0x00004400 ),
		XCHGCOLORREF( 0x00005000 ),
		XCHGCOLORREF( 0x00143C00 ),
		XCHGCOLORREF( 0x005C3C18 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00BCBCBC ),
		XCHGCOLORREF( 0x00EC7000 ),
		XCHGCOLORREF( 0x00EC3820 ),
		XCHGCOLORREF( 0x00F00080 ),
		XCHGCOLORREF( 0x00BC00BC ),
		XCHGCOLORREF( 0x005800E4 ),
		XCHGCOLORREF( 0x000028D8 ),
		XCHGCOLORREF( 0x000C4CC8 ),
		XCHGCOLORREF( 0x00007088 ),
		XCHGCOLORREF( 0x00009400 ),
		XCHGCOLORREF( 0x0000A800 ),
		XCHGCOLORREF( 0x00389000 ),
		XCHGCOLORREF( 0x00888000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCBC3C ),
		XCHGCOLORREF( 0x00FC945C ),
		XCHGCOLORREF( 0x00FC8840 ),
		XCHGCOLORREF( 0x00FC78F4 ),
		XCHGCOLORREF( 0x00B474FC ),
		XCHGCOLORREF( 0x006074FC ),
		XCHGCOLORREF( 0x003898FC ),
		XCHGCOLORREF( 0x003CBCF0 ),
		XCHGCOLORREF( 0x0010D080 ),
		XCHGCOLORREF( 0x0048DC4C ),
		XCHGCOLORREF( 0x0098F858 ),
		XCHGCOLORREF( 0x00D8E800 ),
		XCHGCOLORREF( 0x00787878 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCE4A8 ),
		XCHGCOLORREF( 0x00FCD4C4 ),
		XCHGCOLORREF( 0x00FCC8D4 ),
		XCHGCOLORREF( 0x00FCC4FC ),
		XCHGCOLORREF( 0x00D8C4FC ),
		XCHGCOLORREF( 0x00B0BCFC ),
		XCHGCOLORREF( 0x00A8D8FC ),
		XCHGCOLORREF( 0x00A0E4FC ),
		XCHGCOLORREF( 0x00A0FCE0 ),
		XCHGCOLORREF( 0x00BCF0A8 ),
		XCHGCOLORREF( 0x00CCFCB0 ),
		XCHGCOLORREF( 0x00F0FC9C ),
		XCHGCOLORREF( 0x00C4C4C4 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00747474 ),
		XCHGCOLORREF( 0x008C1824 ),
		XCHGCOLORREF( 0x00A80000 ),
		XCHGCOLORREF( 0x009C0044 ),
		XCHGCOLORREF( 0x0074008C ),
		XCHGCOLORREF( 0x001000A8 ),
		XCHGCOLORREF( 0x000000A4 ),
		XCHGCOLORREF( 0x0000087C ),
		XCHGCOLORREF( 0x00002C40 ),
		XCHGCOLORREF( 0x00004400 ),
		XCHGCOLORREF( 0x00005000 ),
		XCHGCOLORREF( 0x00143C00 ),
		XCHGCOLORREF( 0x005C3C18 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00BCBCBC ),
		XCHGCOLORREF( 0x00EC7000 ),
		XCHGCOLORREF( 0x00EC3820 ),
		XCHGCOLORREF( 0x00F00080 ),
		XCHGCOLORREF( 0x00BC00BC ),
		XCHGCOLORREF( 0x005800E4 ),
		XCHGCOLORREF( 0x000028D8 ),
		XCHGCOLORREF( 0x000C4CC8 ),
		XCHGCOLORREF( 0x00007088 ),
		XCHGCOLORREF( 0x00009400 ),
		XCHGCOLORREF( 0x0000A800 ),
		XCHGCOLORREF( 0x00389000 ),
		XCHGCOLORREF( 0x00888000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCBC3C ),
		XCHGCOLORREF( 0x00FC945C ),
		XCHGCOLORREF( 0x00FC8840 ),
		XCHGCOLORREF( 0x00FC78F4 ),
		XCHGCOLORREF( 0x00B474FC ),
		XCHGCOLORREF( 0x006074FC ),
		XCHGCOLORREF( 0x003898FC ),
		XCHGCOLORREF( 0x003CBCF0 ),
		XCHGCOLORREF( 0x0010D080 ),
		XCHGCOLORREF( 0x0048DC4C ),
		XCHGCOLORREF( 0x0098F858 ),
		XCHGCOLORREF( 0x00D8E800 ),
		XCHGCOLORREF( 0x00787878 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00FCFCFC ),
		XCHGCOLORREF( 0x00FCE4A8 ),
		XCHGCOLORREF( 0x00FCD4C4 ),
		XCHGCOLORREF( 0x00FCC8D4 ),
		XCHGCOLORREF( 0x00FCC4FC ),
		XCHGCOLORREF( 0x00D8C4FC ),
		XCHGCOLORREF( 0x00B0BCFC ),
		XCHGCOLORREF( 0x00A8D8FC ),
		XCHGCOLORREF( 0x00A0E4FC ),
		XCHGCOLORREF( 0x00A0FCE0 ),
		XCHGCOLORREF( 0x00BCF0A8 ),
		XCHGCOLORREF( 0x00CCFCB0 ),
		XCHGCOLORREF( 0x00F0FC9C ),
		XCHGCOLORREF( 0x00C4C4C4 ),
		XCHGCOLORREF( 0x00000000 ),
		XCHGCOLORREF( 0x00000000 )
};

CNesColors::CNesColors()
	:
	m_hDCDesktop( GetDC( GetDesktopWindow() ) ),
	m_hDC( CreateCompatibleDC( m_hDCDesktop ) )
{
	const RECT rc = { 0, 0, 20, 20 };
	for ( size_t i = 0; i < 64; ++i )
	{
		HBITMAP & hbm = m_hbm[ i ];
		HBRUSH hBrush = CreateSolidBrush( XCHGCOLORREF( g_crNesColor[ i ] ) );
		hbm = CreateCompatibleBitmap( m_hDCDesktop, rc.right - rc.left, rc.bottom - rc.top );
		HGDIOBJ holdBm = SelectObject( m_hDC, hbm );
		FillRect( m_hDC, &rc, hBrush );
		SelectObject( m_hDC, holdBm );
		DeleteBrush( hBrush );
	}
};

HBITMAP CNesColors::operator[]( BYTE bColor ) const
{
	return m_hbm[ bColor & 0x3f ];
}

HBITMAP CNesColors::Bitmap( BYTE bColor ) const
{
	return m_hbm[ bColor & 0x3f ];
}

CNesColors::~CNesColors()
{
	for ( auto & hbm : m_hbm )
	{
		DeleteBitmap( hbm );
		hbm = nullptr;
	}

	DeleteDC( m_hDC );
	ReleaseDC( GetDesktopWindow(), m_hDCDesktop );
}

const CNesColors g_hbmColor;